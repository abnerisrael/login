{"version":3,"sources":["pages/Login.js","components/HeaderBar.js","pages/Home.js","routes.js","serviceWorker.js","index.js","App.js"],"names":["Login","handleInput","e","props","handleChangeDataUser","handleSubmit","preventDefault","username","password","length","history","push","className","Container","maxWidth","style","paddingTop","Paper","padding","Typography","component","variant","gutterBottom","align","onSubmit","this","autoComplete","Grid","container","justify","item","xs","TextField","type","name","label","margin","fullWidth","value","onChange","marginTop","marginBottom","Button","color","spacing","icon","faReact","size","faGithub","Component","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","title","HeaderBar","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","AppBar","position","Toolbar","Tooltip","aria-label","IconButton","edge","onClick","currentTarget","faUserCircle","Popover","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","List","ListItem","button","handleLogoff","ListItemIcon","faSignOutAlt","ListItemText","primary","Home","goBack","href","target","Routes","setState","state","exact","path","render","window","location","hostname","match","ReactDOM","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37f9cc79.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Login.css';\r\nimport 'typeface-roboto';\r\nimport { \r\n    Container, Grid, Paper, TextField, Button, Typography, \r\n  } from '@material-ui/core';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub, faReact } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nexport default class Login extends Component {\r\n\r\n    handleInput = (e) => {\r\n        this.props.handleChangeDataUser(e);\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { username, password } = this.props;\r\n\r\n        if(!username.length || !password.length) {\r\n            return;\r\n        }\r\n        else {\r\n            this.props.history.push('/Home');\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main\">\r\n\r\n                <Container maxWidth=\"xs\" style={{ paddingTop: '10%' }}>\r\n\r\n                    <Paper style={{ padding: 20 }}>\r\n\r\n                        <Typography component=\"h1\" variant='h2' gutterBottom align=\"center\">\r\n                            App\r\n                        </Typography>\r\n\r\n                        <form onSubmit={ this.handleSubmit } autoComplete=\"off\">\r\n\r\n                            <Grid container justify=\"center\">\r\n\r\n                                <Grid item xs={12}>\r\n                                    <TextField \r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        label=\"Username\"\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        value={ this.props.username }\r\n                                        onChange={ this.handleInput }\r\n                                    />\r\n                                </Grid>\r\n                                \r\n                                <Grid item xs={12}>\r\n                                    <TextField \r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        value={ this.props.password }\r\n                                        onChange={ this.handleInput }\r\n                                    />\r\n                                </Grid>\r\n                                \r\n                                <Grid item xs={12} style={{ marginTop:15, marginBottom: 15 }}>\r\n                                    <Button \r\n                                        type=\"submit\" \r\n                                        variant=\"contained\" \r\n                                        color=\"primary\"\r\n                                        fullWidth\r\n                                    >\r\n                                        Log in\r\n                                    </Button>\r\n                                </Grid>\r\n\r\n                                <Grid container item justify=\"center\" spacing={1}>\r\n                                    <Grid item><FontAwesomeIcon icon={faReact} size=\"2x\" /></Grid>\r\n                                    <Grid item><FontAwesomeIcon icon={faGithub} size=\"2x\" /></Grid>\r\n                                </Grid>\r\n                            \r\n                            </Grid>\r\n\r\n                        </form>\r\n\r\n                    </Paper>\r\n                    \r\n                </Container>\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n    Tooltip,\r\n    Popover,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText\r\n} from '@material-ui/core';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function HeaderBar(props) {\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenu = e => {\r\n        setAnchorEl(e.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleLogoff = e => {\r\n        e.preventDefault();\r\n        props.handleLogoff();\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    App\r\n                </Typography>\r\n\r\n                <Tooltip title=\"User Options\" aria-label=\"User Options\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={handleMenu}\r\n                        color=\"inherit\"\r\n                    >\r\n                        <FontAwesomeIcon icon={faUserCircle}/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                <Popover\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    \r\n                    <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n                        <ListItem button onClick={handleLogoff}>\r\n                            <ListItemIcon>\r\n                                <FontAwesomeIcon icon={faSignOutAlt}/>\r\n                            </ListItemIcon>\r\n\r\n                            <ListItemText primary=\"Log out\" />\r\n                        </ListItem>\r\n                    </List>\r\n\r\n                </Popover>\r\n\r\n            </Toolbar>\r\n            \r\n        </AppBar>\r\n\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { \r\n    Typography, Container\r\n} from '@material-ui/core';\r\nimport HeaderBar from '../components/HeaderBar';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nexport default class Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <HeaderBar handleLogoff={ this.props.history.goBack }/>\r\n\r\n                <Container maxWidth=\"sm\" style={{ paddingTop: 100 }}>\r\n                    <Typography variant='h5' align=\"center\">\r\n                        Hello, {this.props.username}!\r\n                    </Typography>\r\n\r\n                    <Typography variant='body1' align=\"center\">\r\n                        Welcome to LoginApp, a simple login app developed with React and React Material UI.\r\n                    </Typography>\r\n\r\n                    <Typography variant='body2' align=\"center\">\r\n                        <FontAwesomeIcon icon={faGithub} size=\"6x\" />\r\n                        <br/>\r\n                        <a href=\"https://github.com/abnerisrael/login.git\" target=\"_blank\">See the code on Github</a>                \r\n                    </Typography>\r\n                </Container>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from 'react';\r\nimport  {BrowserRouter as Router, Route}  from 'react-router-dom';\r\n\r\nimport Login from './pages/Login';\r\nimport Home from './pages/Home';\r\n\r\nexport default class Routes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { username:'', password:'' } ;\r\n    }\r\n    \r\n    handleChangeDataUser = (e) => {\r\n    \r\n        const { name, value } = e.target;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n    \r\n                <Route \r\n                    exact \r\n                    path=\"/\" \r\n                    render={( props ) => (\r\n                        <Login \r\n                            {...props} \r\n                            username={this.state.username} \r\n                            password={this.state.password} \r\n                            handleChangeDataUser={this.handleChangeDataUser} \r\n                        />\r\n                    )} \r\n                />\r\n                \r\n                <Route \r\n                    path=\"/home\" \r\n                    render={( props ) => (\r\n                        <Home {...props} username={this.state.username} />\r\n                    )} \r\n                />\r\n    \r\n            </Router>\r\n        );\r\n    }\r\n    \r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport Routes from './routes';\r\n\r\nimport { \r\n  CssBaseline\r\n} from '@material-ui/core';\r\n\r\nexport default function App () {\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <Routes /> \r\n    </div>\r\n  )\r\n\r\n};\r\n"],"sourceRoot":""}